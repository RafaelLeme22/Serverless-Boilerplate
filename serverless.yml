service: serverless-boilerplate
useDotenv: true
custom:
  serverless-offline:
    lambdaPort: 4000
    httpPort: 4001

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  timeout: 30
  stage: ${env:NODE_ENV}
  environment:
    NODE_ENV: ${env:NODE_ENV}
    DB_DIALECT: ${env:DB_DIALECT}
    DB_NAME: ${env:DB_NAME}
    DB_USERNAME: ${env:DB_USER}
    DB_USER: ${env:DB_USER}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DB_HOST: ${env:DB_HOST}
    DB_PORT: ${env:DB_PORT}
functions:
  createUser:
    handler: handler.createUser
    events:
      - http:
          path: /users
          method: post
          cors: true
  updateUser:
    handler: handler.updateUser
    events:
      - http:
          path: /users/{id}
          method: put
          cors: true
  deleteUser:
    handler: handler.deleteUser
    events:
      - http:
          path: /users/{id}
          method: delete
          cors: true          
  searchUser:
    handler: handler.searchUser
    events:
      - http:
          path: /users
          method: get
  deleteMultipleUser:
    handler: handler.deleteMultipleUsers
    events:
      - http:
          path: /users/multiple
          method: delete
          cors: true
plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-dotenv-plugin